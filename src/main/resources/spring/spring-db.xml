<beans xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jdbc="http://www.springframework.org/schema/jdbc"
  xmlns:jee="http://www.springframework.org/schema/jee"
  xmlns:jpa="http://www.springframework.org/schema/data/jpa"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://www.springframework.org/schema/beans"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">

    <!--
        For postgres driver logging
        It uses java.util.logging and logged via jul-to-slf4j bridge
        https://stackoverflow.com/a/27296470/548473
    -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingBean">
      <property name="staticMethod" value="org.slf4j.bridge.SLF4JBridgeHandler.install"/>
    </bean>

  <jdbc:initialize-database data-source="dataSource" enabled="${database.init}">
    <jdbc:script location="classpath:db/initDB.sql"/>
    <jdbc:script encoding="utf-8" location="classpath:db/populateDB.sql"/>
  </jdbc:initialize-database>

  <tx:annotation-driven/>

    <bean class="org.apache.tomcat.jdbc.pool.DataSource"
      id="dataSource"
      p:driverClassName="org.postgresql.Driver"
      p:password="${database.password}"
      p:url="${database.url}"
      p:username="${database.username}"/>

    <context:property-placeholder location="classpath:db/postgres.properties"
      system-properties-mode="OVERRIDE"/>

  <!-- Choose profile from (hsqldb/ postgres) and (jdbc/ datajpa/ jpa) -->

    <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
      id="entityManagerFactory"
      p:dataSource-ref="dataSource"
      p:packagesToScan="ru.ray_llc.**.model">
      <!--p:persistenceUnitName="persistenceUnit">-->

      <property name="jpaPropertyMap">
        <map>
          <entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}" value="${hibernate.format_sql}"/>
          <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}" value="${hibernate.use_sql_comments}"/>
          <entry key="#{T(org.hibernate.cfg.AvailableSettings).JPA_PROXY_COMPLIANCE}" value="false"/>
          <!--<entry key="#{T(org.hibernate.cfg.AvailableSettings).HBM2DDL_AUTO}" value="${hibernate.hbm2ddl.auto}"/>-->

          <!--https://github.com/hibernate/hibernate-orm/blob/master/documentation/src/main/asciidoc/userguide/chapters/caching/Caching.adoc#caching-provider-jcache-->
          <entry key="#{T(org.hibernate.cfg.AvailableSettings).CACHE_REGION_FACTORY}" value="org.hibernate.cache.jcache.internal.JCacheRegionFactory"/>
          <entry key="#{T(org.hibernate.cache.jcache.ConfigSettings).PROVIDER}" value="org.ehcache.jsr107.EhcacheCachingProvider"/>
          <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SECOND_LEVEL_CACHE}" value="true"/>
          <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_QUERY_CACHE}" value="false"/> <!--default-->

          <entry key="javax.persistence.validation.group.pre-persist" value="ru.ray_llc.rac.View$Persist"/>
          <entry key="javax.persistence.validation.group.pre-update" value="ru.ray_llc.rac.View$Persist"/>
          <!--
                              <entry key="#{T(org.hibernate.cfg.AvailableSettings).HBM2DDL_SCRIPTS_ACTION}" value="drop-and-create"/>
                              <entry key="#{T(org.hibernate.cfg.AvailableSettings).HBM2DDL_SCRIPTS_CREATE_TARGET}" value="${RAC_ROOT}/config/ddl/create.ddl"/>
                              <entry key="#{T(org.hibernate.cfg.AvailableSettings).HBM2DDL_SCRIPTS_DROP_TARGET}" value="${RAC_ROOT}/config/ddl/drop.ddl"/>
                              <entry key="#{T(org.hibernate.cfg.AvailableSettings).HBM2DDL_AUTO}" value="create"/>
          -->
        </map>
      </property>

      <property name="jpaVendorAdapter">
        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
          p:showSql="${jpa.showSql}">
        </bean>
      </property>
    </bean>

    <!-- Transaction manager for a single JPA EntityManagerFactory (alternative to JTA) -->
    <bean class="org.springframework.orm.jpa.JpaTransactionManager" id="transactionManager"
      p:entityManagerFactory-ref="entityManagerFactory"/>

    <context:component-scan base-package="ru.ray_llc.**.repository.datajpa"/>
    <jpa:repositories base-package="ru.ray_llc.**.repository.datajpa"/>

</beans>